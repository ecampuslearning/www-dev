{
  "serverId": "Flux159/mcp-server-kubernetes/mcp-server-kubernetes",
  "version": "c5f8de19fe375c6ff7bba925d98861079d70823a",
  "manifest": {
    "id": "mcp-server-kubernetes",
    "fullId": "Flux159/mcp-server-kubernetes/mcp-server-kubernetes",
    "repo": {
      "provider": "github.com",
      "owner": "Flux159",
      "repo": "mcp-server-kubernetes",
      "branch": "main",
      "url": "https://github.com/Flux159/mcp-server-kubernetes"
    },
    "config": {
      "argumentsTemplate": null,
      "configValues": []
    },
    "subdirectory": "/",
    "title": "MCP Server Kubernetes",
    "description": "MCP Server that can connect to a Kubernetes cluster and manage it."
  },
  "manifestHash": "c974ec60e9005a88314d7a5d18ec1566",
  "createdAt": "2025-07-16T01:18:41.666Z",
  "builder": [
    {
      "type": "nixpacks",
      "plan": {
        "providers": [],
        "buildImage": "ghcr.io/railwayapp/nixpacks:ubuntu-1745885067",
        "variables": {
          "CI": "true",
          "NIXPACKS_METADATA": "node",
          "NODE_ENV": "production",
          "NPM_CONFIG_PRODUCTION": "false"
        },
        "phases": {
          "build": {
            "dependsOn": [
              "install"
            ],
            "cmds": [
              "bun run build"
            ],
            "cacheDirectories": [
              "node_modules/.cache"
            ]
          },
          "install": {
            "dependsOn": [
              "setup"
            ],
            "cmds": [
              "bun i --no-save"
            ],
            "cacheDirectories": [
              "/root/.bun"
            ],
            "paths": [
              "/app/node_modules/.bin"
            ]
          },
          "setup": {
            "nixPkgs": [
              "nodejs_22",
              "bun"
            ],
            "nixOverlays": [
              "https://github.com/railwayapp/nix-npm-overlay/archive/main.tar.gz"
            ],
            "nixpkgsArchive": "f69ae4816bc1b501460ad2c0c63ed0cc4a9b876e"
          }
        },
        "start": {
          "cmd": "bun run start"
        }
      }
    }
  ]
}