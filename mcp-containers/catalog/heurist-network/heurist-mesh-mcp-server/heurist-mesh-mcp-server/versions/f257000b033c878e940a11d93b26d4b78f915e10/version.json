{
  "serverId": "heurist-network/heurist-mesh-mcp-server/heurist-mesh-mcp-server",
  "version": "f257000b033c878e940a11d93b26d4b78f915e10",
  "manifest": {
    "id": "heurist-mesh-mcp-server",
    "fullId": "heurist-network/heurist-mesh-mcp-server/heurist-mesh-mcp-server",
    "repo": {
      "provider": "github.com",
      "owner": "heurist-network",
      "repo": "heurist-mesh-mcp-server",
      "branch": "main",
      "url": "https://github.com/heurist-network/heurist-mesh-mcp-server"
    },
    "config": {
      "argumentsTemplate": null,
      "configValues": [
        {
          "title": "heurist-api-key",
          "description": null,
          "default": null,
          "required": false,
          "fields": [
            {
              "type": "environment",
              "key": "HEURIST_API_KEY"
            }
          ]
        }
      ]
    },
    "subdirectory": "/",
    "title": "Mesh Agent MCP Server",
    "description": "A Model Context Protocol (MCP) server that connects to [Heurist Mesh](https://github.com/heurist-network/heurist-agent-framework/tree/main/mesh) APIs, providing Claude with access to various blockchain and web3 tools."
  },
  "manifestHash": "8842bbc6ad7f9f0450838fad4c2e07e4",
  "createdAt": "2025-04-29T08:20:56.554Z",
  "builder": [
    {
      "type": "nixpacks",
      "plan": {
        "providers": [],
        "buildImage": "ghcr.io/railwayapp/nixpacks:ubuntu-1745544451",
        "variables": {
          "NIXPACKS_METADATA": "python",
          "NIXPACKS_UV_VERSION": "0.4.30",
          "PIP_DEFAULT_TIMEOUT": "100",
          "PIP_DISABLE_PIP_VERSION_CHECK": "1",
          "PIP_NO_CACHE_DIR": "1",
          "PYTHONDONTWRITEBYTECODE": "1",
          "PYTHONFAULTHANDLER": "1",
          "PYTHONHASHSEED": "random",
          "PYTHONUNBUFFERED": "1",
          "UV_PROJECT_ENVIRONMENT": "/opt/venv"
        },
        "phases": {
          "install": {
            "dependsOn": [
              "setup"
            ],
            "cmds": [
              "python -m venv --copies /opt/venv && . /opt/venv/bin/activate && pip install uv==$NIXPACKS_UV_VERSION && uv sync --no-dev --frozen"
            ],
            "cacheDirectories": [
              "/root/.cache/uv"
            ],
            "paths": [
              "/opt/venv/bin"
            ]
          },
          "setup": {
            "nixPkgs": [
              "python3",
              "gcc"
            ],
            "nixLibs": [
              "zlib",
              "stdenv.cc.cc.lib"
            ],
            "nixOverlays": [],
            "nixpkgsArchive": "bc8f8d1be58e8c8383e683a06e1e1e57893fff87"
          }
        },
        "start": {
          "cmd": "mesh-tool-server"
        }
      }
    }
  ]
}